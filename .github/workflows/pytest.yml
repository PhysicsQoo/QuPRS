# .github/workflows/pytest.yml

name: Python Pytest CI

# Trigger this workflow on push or pull request to main branch
on:
  push

jobs:
    build:
        # Specify the runner environment
        runs-on: ${{ matrix.os }}

        # Test matrix for multiple operating systems
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                python-version: ["3.11", "3.12", "3.13"]                

        steps:
          # Step 1: Checkout repository code
          - name: Check out repository code
            uses: actions/checkout@v4
            with:
              submodules: true
              fetch-depth: 0

          # Step 2: Set up Python environment
          - name: Set up Python ${{ matrix.python-version }}
            uses: actions/setup-python@v5
            with:
              python-version: ${{ matrix.python-version }}
              cache: 'pip'
          - name: Install system dependencies for GPMC (Linux)
            if: matrix.os == 'ubuntu-latest'
            run: |
              sudo apt-get update
              sudo apt-get install -y libgmp-dev libmpfr-dev
          - name: Install system dependencies for GPMC (macOS)
            if: matrix.os == 'macos-latest'
            run: |
              brew install cmake gmp mpfr zlib

          # Step 3: Install dependencies
          - name: Install dependencies
            run: |
              python -m pip install --upgrade pip
              python -m pip install cibuildwheel
              pip install .[dev]

          # Step 4: Run pytest
          - name: Run tests with pytest
            run: |
              pytest -n auto -v \
              --junitxml=pytest-results.xml \
              --html=pytest-results.html \
              --self-contained-html \
              --cov=QuPRS \
              --cov-report=xml \
              --cov-report=html

          # Step 5: Upload pytest HTML results as artifact
          - name: Upload pytest HTML results
            if: always()
            uses: actions/upload-artifact@v4
            with:
              name: pytest-results-html-${{ matrix.os }}-${{ matrix.python-version }}
              path: pytest-results.html

          # Step 6: Upload pytest XML results as artifact
          - name: Upload pytest XML results
            if: always()
            uses: actions/upload-artifact@v4
            with:
              name: pytest-results-xml-${{ matrix.os }}-${{ matrix.python-version }}
              path: pytest-results.xml
          # Step 7: Upload coverage XML report  
          - name: Upload coverage XML report
            if: always()
            uses: actions/upload-artifact@v4
            with:
              name: coverage-report-xml-${{ matrix.os }}-${{ matrix.python-version }}
              path: coverage.xml

          # Step 8: Upload coverage HTML report  
          - name: Upload coverage HTML report
            if: always()
            uses: actions/upload-artifact@v4
            with:
              name: coverage-report-html-${{ matrix.os }}-${{ matrix.python-version }}
              path: htmlcov
            