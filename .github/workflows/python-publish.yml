# .github/workflows/python-publish.yml

name: Build and Publish to PyPI

# Trigger: Runs when a Git tag starting with 'v' is pushed
on:
  push:
    tags:
      - 'v*'

jobs:
  # --- Job 1: Build Wheels on Multiple Operating Systems ---
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      # Don't cancel all jobs if one fails
      fail-fast: false
      matrix:
        # Build on all major operating systems
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Check out the code
        uses: actions/checkout@v4
        with:
          # Ensure submodules and full Git history are fetched
          submodules: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          # It is recommended to specify an explicit Python version to ensure consistent build environments

          python-version: '3.12'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        # Run cibuildwheel, which handles all platform-specific build details
        # It reads your pyproject.toml for system dependencies
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          # Build for Python 3.11, 3.12, 3.13
          CIBW_BUILD: cp311-* cp312-* cp313-*
          # For macOS ARM64 on GitHub Runners
          CIBW_ARCHS_MACOS: "x86_64 arm64"

      - name: Upload built wheels
        # Upload the built wheel files as artifacts for use in the next job
        uses: actions/upload-artifact@v4
        with:
          name: python-wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  # --- Job 2: Build the Source Distribution (sdist) ---
  build_sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Install build dependencies
        run: python -m pip install hatch

      - name: Build sdist
        run: hatch build -t sdist
      
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: python-sdist
          path: dist/*.tar.gz

  # --- Job 3: Publish Wheels and sdist After All Builds Succeed ---
  publish_package:
    name: Publish to PyPI and Create Release
    # Run only after all build jobs succeed
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest

    permissions:
      id-token: write  # For PyPI OIDC Trusted Publishing
      contents: write  # For creating GitHub Releases

    steps:
      - name: Download all wheels from artifacts
        uses: actions/download-artifact@v4
        with:
          # Use wildcard to download artifacts from all platforms
          pattern: python-wheels-*
          # Merge all artifacts into a single directory
          merge-multiple: true
          path: dist
      
      - name: Download sdist from artifact
        uses: actions/download-artifact@v4
        with:
          name: python-sdist
          path: dist

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # This action automatically uploads all files in the dist/ directory

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          # Automatically generate release content from the Git tag
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## üöÄ Release Notes
            * **üì¶ Version:** `${{ github.ref_name }}`
            * **üîó PyPI Link:** https://pypi.org/project/QuPRS/${{ github.ref_name }}
            * üõ†Ô∏è This release was automatically generated by GitHub Actions.
          # Attach all built wheels and the sdist to the release
          files: dist/*