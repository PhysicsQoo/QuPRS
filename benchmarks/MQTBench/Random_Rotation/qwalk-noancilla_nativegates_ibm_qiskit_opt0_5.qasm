OPENQASM 2.0;
include "qelib1.inc";
qreg node[4];
qreg coin[1];
ry(pi/2) node[0];
rz(4.34427533853712) node[0];
ry(2.5802058126763807) node[3];
rz(-pi/2) node[3];
cx node[0],node[3];
ry(pi) node[0];
rz(-2.2191334273849) node[3];
ry(1.703175754437592) node[3];
rz(1.9603315569313438) node[3];
cx node[0],node[3];
rz(-2.7243081320399165) node[0];
ry(pi) node[0];
rz(0.48919977589817387) node[3];
ry(0.9290710943555835) node[3];
rz(-1.5123120570458766) node[3];
cx node[2],node[3];
rz(3*pi/4) node[3];
ry(pi/2) node[3];
ry(-pi/2) coin[0];
rz(-9*pi/16) coin[0];
cx coin[0],node[3];
rz(pi/4) node[3];
cx node[1],node[3];
rz(-pi/4) node[3];
cx coin[0],node[3];
rz(pi/4) node[3];
cx node[1],node[3];
rz(3*pi/4) node[3];
ry(pi/2) node[3];
rz(pi/4) node[3];
cx node[2],node[3];
rz(2.77462181530763) node[3];
ry(1.956742475130694) node[3];
rz(2.43912376442508) node[3];
cx node[0],node[3];
rz(pi/2) node[0];
ry(pi) node[0];
rz(-2.2191334273849) node[3];
ry(1.703175754437592) node[3];
rz(1.9603315569313438) node[3];
cx node[0],node[3];
rz(pi/4) node[0];
ry(pi) node[0];
ry(pi/2) node[3];
rz(1.7948076492789315) node[3];
cx node[2],node[3];
rz(3*pi/4) node[3];
ry(pi/2) node[3];
rz(pi/4) node[3];
cx node[1],node[3];
rz(-pi/4) node[3];
cx coin[0],node[3];
rz(pi/4) node[3];
cx node[1],node[3];
rz(-pi/4) node[3];
cx coin[0],node[3];
ry(-pi/2) node[3];
rz(-3*pi/4) node[3];
cx node[2],node[3];
rz(3*pi/4) node[3];
ry(pi/2) node[3];
rz(pi/8) node[3];
ry(2.58020581267638) coin[0];
rz(-pi/2) coin[0];
cx node[0],coin[0];
rz(pi/2) node[0];
ry(pi) node[0];
rz(-1.736710062545761) coin[0];
ry(1.5794556004953724) coin[0];
rz(1.6748462861356774) coin[0];
cx node[0],coin[0];
rz(3.3379421944391545) node[0];
rz(pi/2) coin[0];
ry(2.1321831677083103) coin[0];
cx coin[0],node[1];
rz(-pi/16) node[1];
ry(2.5802058126763807) node[1];
rz(-pi/2) node[1];
cx node[0],node[1];
ry(pi) node[0];
rz(-1.736710062545761) node[1];
ry(1.5794556004953724) node[1];
rz(1.6748462861356774) node[1];
cx node[0],node[1];
rz(3.3379421944391554) node[0];
rz(pi/2) node[1];
ry(2.1321831677083094) node[1];
cx coin[0],node[1];
rz(9*pi/16) node[1];
ry(2.58020581267638) node[1];
rz(-pi/2) node[1];
cx node[0],node[1];
ry(pi) node[0];
rz(-1.736710062545761) node[1];
ry(1.5794556004953724) node[1];
rz(1.6748462861356774) node[1];
cx node[0],node[1];
rz(3.3379421944391545) node[0];
rz(pi/2) node[1];
ry(2.1321831677083103) node[1];
cx node[1],node[2];
rz(-pi/16) node[2];
ry(2.5802058126763807) node[2];
rz(-pi/2) node[2];
cx node[0],node[2];
ry(pi) node[0];
rz(-1.736710062545761) node[2];
ry(1.5794556004953724) node[2];
rz(1.6748462861356774) node[2];
cx node[0],node[2];
rz(3.3379421944391554) node[0];
rz(pi/2) node[2];
ry(2.1321831677083094) node[2];
cx coin[0],node[2];
rz(pi/16) node[2];
ry(2.58020581267638) node[2];
rz(-pi/2) node[2];
cx node[0],node[2];
ry(pi) node[0];
rz(-1.736710062545761) node[2];
ry(1.5794556004953724) node[2];
rz(1.6748462861356774) node[2];
cx node[0],node[2];
rz(3.3379421944391545) node[0];
rz(pi/2) node[2];
ry(2.1321831677083103) node[2];
cx node[1],node[2];
rz(pi/2) node[1];
ry(pi/2) node[1];
rz(pi/8) node[1];
rz(-pi/16) node[2];
ry(2.5802058126763807) node[2];
rz(-pi/2) node[2];
cx node[0],node[2];
ry(pi) node[0];
rz(-1.736710062545761) node[2];
ry(1.5794556004953724) node[2];
rz(1.6748462861356774) node[2];
cx node[0],node[2];
rz(3.3379421944391554) node[0];
rz(pi/2) node[2];
ry(2.1321831677083094) node[2];
cx coin[0],node[2];
rz(3*pi/16) node[2];
ry(2.58020581267638) node[2];
rz(-pi/2) node[2];
cx node[0],node[2];
ry(pi) node[0];
rz(-1.736710062545761) node[2];
ry(1.5794556004953724) node[2];
rz(1.6748462861356774) node[2];
cx node[0],node[2];
rz(9*pi/16) node[0];
ry(pi) node[0];
rz(pi/2) node[2];
ry(2.1321831677083103) node[2];
cx coin[0],node[2];
rz(-pi/8) node[2];
cx coin[0],node[2];
cx node[2],node[3];
rz(-pi/8) node[3];
cx coin[0],node[3];
rz(pi/8) node[3];
cx node[2],node[3];
rz(-pi/8) node[3];
cx coin[0],node[3];
cx node[3],node[1];
rz(-pi/8) node[1];
cx node[2],node[1];
rz(pi/8) node[1];
cx node[3],node[1];
rz(-pi/8) node[1];
cx coin[0],node[1];
rz(pi/8) node[1];
cx node[3],node[1];
rz(-pi/8) node[1];
cx node[2],node[1];
rz(pi/8) node[1];
ry(-pi/2) node[2];
rz(-pi) node[2];
cx node[3],node[1];
rz(-pi/8) node[1];
cx node[3],node[2];
rz(-pi/4) node[2];
cx coin[0],node[1];
ry(pi/2) node[1];
cx coin[0],node[2];
rz(pi/4) node[2];
cx node[3],node[2];
rz(-pi/4) node[2];
rz(pi/4) node[3];
cx coin[0],node[2];
rz(pi/4) node[2];
ry(pi/2) node[2];
cx coin[0],node[3];
ry(-0.5613868409134125) node[3];
rz(-pi/2) node[3];
cx node[0],node[3];
rz(pi/2) node[0];
ry(pi) node[0];
rz(-2.2191334273849) node[3];
ry(1.703175754437592) node[3];
rz(1.9603315569313438) node[3];
cx node[0],node[3];
rz(3*pi/4) node[0];
ry(pi) node[0];
ry(-pi/2) node[3];
rz(-0.224011322484035) node[3];
cx node[2],node[3];
rz(3*pi/4) node[3];
ry(pi/2) node[3];
ry(pi) coin[0];
rz(4.516039439535327) coin[0];
cx coin[0],node[3];
rz(pi/4) node[3];
cx node[1],node[3];
rz(-pi/4) node[3];
cx coin[0],node[3];
rz(pi/4) node[3];
cx node[1],node[3];
rz(3*pi/4) node[3];
ry(pi/2) node[3];
rz(pi/4) node[3];
cx node[2],node[3];
rz(2.77462181530763) node[3];
ry(1.956742475130694) node[3];
rz(2.43912376442508) node[3];
cx node[0],node[3];
rz(pi/2) node[0];
ry(pi) node[0];
rz(-2.2191334273849) node[3];
ry(1.703175754437592) node[3];
rz(1.9603315569313438) node[3];
cx node[0],node[3];
rz(pi/4) node[0];
ry(pi) node[0];
ry(pi/2) node[3];
rz(1.7948076492789315) node[3];
cx node[2],node[3];
rz(3*pi/4) node[3];
ry(pi/2) node[3];
rz(pi/4) node[3];
cx node[1],node[3];
rz(-pi/4) node[3];
cx coin[0],node[3];
rz(pi/4) node[3];
cx node[1],node[3];
rz(-pi/4) node[3];
cx coin[0],node[3];
ry(-pi/2) node[3];
rz(-3*pi/4) node[3];
cx node[2],node[3];
rz(3*pi/4) node[3];
ry(pi/2) node[3];
rz(pi/8) node[3];
ry(2.58020581267638) coin[0];
rz(-pi/2) coin[0];
cx node[0],coin[0];
rz(pi/2) node[0];
ry(pi) node[0];
rz(-1.736710062545761) coin[0];
rz(3.4561498666862396) node[3];
ry(1.5794556004953724) coin[0];
rz(1.6748462861356774) coin[0];
cx node[0],coin[0];
rz(3.3379421944391545) node[0];
rz(pi/2) coin[0];
ry(2.1321831677083103) coin[0];
cx coin[0],node[1];
rz(-pi/16) node[1];
ry(2.5802058126763807) node[1];
rz(-pi/2) node[1];
cx node[0],node[1];
ry(pi) node[0];
rz(-1.736710062545761) node[1];
ry(1.5794556004953724) node[1];
rz(1.6748462861356774) node[1];
cx node[0],node[1];
rz(3.3379421944391554) node[0];
rz(pi/2) node[1];
ry(2.1321831677083094) node[1];
cx coin[0],node[1];
rz(9*pi/16) node[1];
ry(2.58020581267638) node[1];
rz(-pi/2) node[1];
cx node[0],node[1];
ry(pi) node[0];
rz(-1.736710062545761) node[1];
ry(1.5794556004953724) node[1];
rz(1.6748462861356774) node[1];
cx node[0],node[1];
rz(3.3379421944391545) node[0];
rz(pi/2) node[1];
ry(2.1321831677083103) node[1];
cx node[1],node[2];
rz(-pi/16) node[2];
ry(2.5802058126763807) node[2];
rz(-pi/2) node[2];
cx node[0],node[2];
ry(pi) node[0];
rz(-1.736710062545761) node[2];
ry(1.5794556004953724) node[2];
rz(1.6748462861356774) node[2];
cx node[0],node[2];
rz(3.3379421944391554) node[0];
rz(pi/2) node[2];
ry(2.1321831677083094) node[2];
cx coin[0],node[2];
rz(pi/16) node[2];
ry(2.58020581267638) node[2];
rz(-pi/2) node[2];
cx node[0],node[2];
ry(pi) node[0];
rz(-1.736710062545761) node[2];
ry(1.5794556004953724) node[2];
rz(1.6748462861356774) node[2];
cx node[0],node[2];
rz(3.3379421944391545) node[0];
rz(pi/2) node[2];
ry(2.1321831677083103) node[2];
cx node[1],node[2];
rz(pi/2) node[1];
ry(pi/2) node[1];
rz(pi/8) node[1];
rz(-pi/16) node[2];
ry(2.5802058126763807) node[2];
rz(-pi/2) node[2];
cx node[0],node[2];
ry(pi) node[0];
rz(-1.736710062545761) node[2];
ry(1.5794556004953724) node[2];
rz(1.6748462861356774) node[2];
cx node[0],node[2];
rz(3.3379421944391554) node[0];
rz(pi/2) node[2];
ry(2.1321831677083094) node[2];
cx coin[0],node[2];
rz(3*pi/16) node[2];
ry(2.58020581267638) node[2];
rz(-pi/2) node[2];
cx node[0],node[2];
ry(pi) node[0];
rz(-1.736710062545761) node[2];
ry(1.5794556004953724) node[2];
rz(1.6748462861356774) node[2];
cx node[0],node[2];
rz(9*pi/16) node[0];
ry(pi) node[0];
rz(pi/2) node[2];
ry(2.1321831677083103) node[2];
cx coin[0],node[2];
rz(-pi/8) node[2];
cx coin[0],node[2];
cx node[2],node[3];
rz(-pi/8) node[3];
cx coin[0],node[3];
rz(pi/8) node[3];
cx node[2],node[3];
rz(-pi/8) node[3];
cx coin[0],node[3];
cx node[3],node[1];
rz(-pi/8) node[1];
cx node[2],node[1];
rz(pi/8) node[1];
cx node[3],node[1];
rz(-pi/8) node[1];
cx coin[0],node[1];
rz(pi/8) node[1];
cx node[3],node[1];
rz(-pi/8) node[1];
cx node[2],node[1];
rz(pi/8) node[1];
ry(-pi/2) node[2];
rz(-pi) node[2];
cx node[3],node[1];
rz(-pi/8) node[1];
cx node[3],node[2];
rz(-pi/4) node[2];
cx coin[0],node[1];
ry(pi/2) node[1];
cx coin[0],node[2];
rz(pi/4) node[2];
cx node[3],node[2];
rz(-pi/4) node[2];
rz(pi/4) node[3];
ry(2.180949920636306) node[3];
cx coin[0],node[2];
rz(pi/4) node[2];
ry(pi/2) node[2];
cx coin[0],node[3];
ry(-0.5613868409134125) node[3];
rz(-pi/2) node[3];
cx node[0],node[3];
rz(pi/2) node[0];
ry(4.369481024477107) coin[0];
ry(pi) node[0];
rz(-2.2191334273849) node[3];
ry(1.703175754437592) node[3];
rz(1.9603315569313438) node[3];
cx node[0],node[3];
rz(3*pi/4) node[0];
ry(pi) node[0];
ry(-pi/2) node[3];
rz(-0.224011322484035) node[3];
cx node[2],node[3];
rz(3*pi/4) node[3];
ry(pi/2) node[3];
ry(-pi/2) coin[0];
ry(4.435556302102238) node[3];
rz(7*pi/16) coin[0];
cx coin[0],node[3];
rz(pi/4) node[3];
cx node[1],node[3];
rz(-pi/4) node[3];
cx coin[0],node[3];
rz(pi/4) node[3];
cx node[1],node[3];
rz(3*pi/4) node[3];
ry(pi/2) node[3];
rz(pi/4) node[3];
cx node[2],node[3];
rz(2.77462181530763) node[3];
rz(1.2543087287978973) node[1];
ry(1.956742475130694) node[3];
rz(2.43912376442508) node[3];
cx node[0],node[3];
rz(pi/2) node[0];
ry(pi) node[0];
rz(-2.2191334273849) node[3];
ry(1.703175754437592) node[3];
rz(1.9603315569313438) node[3];
cx node[0],node[3];
rz(pi/4) node[0];
ry(pi) node[0];
ry(pi/2) node[3];
rz(1.7948076492789315) node[3];
cx node[2],node[3];
rz(3*pi/4) node[3];
ry(pi/2) node[3];
rz(pi/4) node[3];
cx node[1],node[3];
rz(5.323727809687829) node[1];
rz(-pi/4) node[3];
cx coin[0],node[3];
rz(pi/4) node[3];
cx node[1],node[3];
rz(-pi/4) node[3];
cx coin[0],node[3];
ry(-pi/2) node[3];
rz(-3*pi/4) node[3];
cx node[2],node[3];
rz(3*pi/4) node[3];
ry(pi/2) node[3];
rz(pi/8) node[3];
ry(2.58020581267638) coin[0];
rz(-pi/2) coin[0];
cx node[0],coin[0];
rz(pi/2) node[0];
ry(pi) node[0];
rz(-1.736710062545761) coin[0];
ry(1.5794556004953724) coin[0];
rz(1.6748462861356774) coin[0];
cx node[0],coin[0];
rz(3.3379421944391545) node[0];
rz(pi/2) coin[0];
ry(2.1321831677083103) coin[0];
cx coin[0],node[1];
rz(-pi/16) node[1];
ry(2.5802058126763807) node[1];
rz(-pi/2) node[1];
cx node[0],node[1];
ry(pi) node[0];
rz(-1.736710062545761) node[1];
ry(1.5794556004953724) node[1];
rz(1.6748462861356774) node[1];
cx node[0],node[1];
rz(3.3379421944391554) node[0];
rz(pi/2) node[1];
ry(2.1321831677083094) node[1];
cx coin[0],node[1];
rz(9*pi/16) node[1];
ry(2.58020581267638) node[1];
rz(-pi/2) node[1];
cx node[0],node[1];
ry(pi) node[0];
rz(-1.736710062545761) node[1];
ry(1.5794556004953724) node[1];
rz(1.6748462861356774) node[1];
cx node[0],node[1];
rz(3.3379421944391545) node[0];
rz(pi/2) node[1];
ry(2.1321831677083103) node[1];
cx node[1],node[2];
rz(-pi/16) node[2];
ry(2.5802058126763807) node[2];
rz(-pi/2) node[2];
cx node[0],node[2];
ry(pi) node[0];
rz(-1.736710062545761) node[2];
ry(1.5794556004953724) node[2];
rz(1.6748462861356774) node[2];
cx node[0],node[2];
rz(3.3379421944391554) node[0];
rz(pi/2) node[2];
ry(2.1321831677083094) node[2];
cx coin[0],node[2];
rz(pi/16) node[2];
ry(2.58020581267638) node[2];
rz(-pi/2) node[2];
cx node[0],node[2];
ry(pi) node[0];
rz(-1.736710062545761) node[2];
ry(1.5794556004953724) node[2];
rz(1.6748462861356774) node[2];
cx node[0],node[2];
rz(3.3379421944391545) node[0];
rz(pi/2) node[2];
ry(2.1321831677083103) node[2];
cx node[1],node[2];
rz(pi/2) node[1];
ry(pi/2) node[1];
rz(pi/8) node[1];
rz(-pi/16) node[2];
ry(2.5802058126763807) node[2];
rz(-pi/2) node[2];
cx node[0],node[2];
ry(pi) node[0];
rz(-1.736710062545761) node[2];
ry(1.5794556004953724) node[2];
rz(1.6748462861356774) node[2];
cx node[0],node[2];
rz(3.3379421944391554) node[0];
rz(pi/2) node[2];
ry(2.1321831677083094) node[2];
cx coin[0],node[2];
rz(3*pi/16) node[2];
ry(2.58020581267638) node[2];
rz(-pi/2) node[2];
cx node[0],node[2];
ry(pi) node[0];
rz(-1.736710062545761) node[2];
ry(1.5794556004953724) node[2];
rz(1.6748462861356774) node[2];
cx node[0],node[2];
rz(9*pi/16) node[0];
ry(pi) node[0];
rz(pi/2) node[2];
ry(2.1321831677083103) node[2];
cx coin[0],node[2];
rz(-pi/8) node[2];
cx coin[0],node[2];
cx node[2],node[3];
rz(-pi/8) node[3];
cx coin[0],node[3];
rz(pi/8) node[3];
cx node[2],node[3];
rz(-pi/8) node[3];
cx coin[0],node[3];
cx node[3],node[1];
rz(-pi/8) node[1];
cx node[2],node[1];
rz(pi/8) node[1];
cx node[3],node[1];
rz(-pi/8) node[1];
cx coin[0],node[1];
rz(pi/8) node[1];
cx node[3],node[1];
rz(-pi/8) node[1];
cx node[2],node[1];
rz(pi/8) node[1];
ry(-pi/2) node[2];
rz(-pi) node[2];
cx node[3],node[1];
rz(-pi/8) node[1];
cx node[3],node[2];
rz(-pi/4) node[2];
cx coin[0],node[1];
ry(pi/2) node[1];
cx coin[0],node[2];
rz(pi/4) node[2];
cx node[3],node[2];
rz(-pi/4) node[2];
rz(pi/4) node[3];
cx coin[0],node[2];
rz(pi/4) node[2];
ry(pi/2) node[2];
cx coin[0],node[3];
ry(-0.5613868409134125) node[3];
rz(-pi/2) node[3];
cx node[0],node[3];
rz(pi/2) node[0];
ry(pi) node[0];
rz(-2.2191334273849) node[3];
ry(1.703175754437592) node[3];
rz(1.9603315569313438) node[3];
cx node[0],node[3];
rz(3*pi/4) node[0];
ry(pi) node[0];
ry(-pi/2) node[3];
rz(-0.224011322484035) node[3];
cx node[2],node[3];
rz(3*pi/4) node[3];
ry(pi/2) node[3];
ry(pi) coin[0];
rz(4.516039439535327) coin[0];
cx coin[0],node[3];
rz(pi/4) node[3];
cx node[1],node[3];
rz(-pi/4) node[3];
cx coin[0],node[3];
rz(pi/4) node[3];
cx node[1],node[3];
rz(3*pi/4) node[3];
ry(pi/2) node[3];
rz(pi/4) node[3];
cx node[2],node[3];
rz(2.77462181530763) node[3];
ry(1.956742475130694) node[3];
rz(2.43912376442508) node[3];
cx node[0],node[3];
rz(pi/2) node[0];
ry(pi) node[0];
rz(-2.2191334273849) node[3];
ry(1.703175754437592) node[3];
rz(1.9603315569313438) node[3];
cx node[0],node[3];
rz(pi/4) node[0];
ry(pi) node[0];
ry(pi/2) node[3];
rz(1.7948076492789315) node[3];
cx node[2],node[3];
rz(3*pi/4) node[3];
ry(pi/2) node[3];
rz(pi/4) node[3];
cx node[1],node[3];
rz(-pi/4) node[3];
cx coin[0],node[3];
rz(pi/4) node[3];
cx node[1],node[3];
rz(-pi/4) node[3];
cx coin[0],node[3];
ry(-pi/2) node[3];
rz(-3*pi/4) node[3];
cx node[2],node[3];
rz(3*pi/4) node[3];
ry(pi/2) node[3];
rz(pi/8) node[3];
ry(2.58020581267638) coin[0];
rz(-pi/2) coin[0];
cx node[0],coin[0];
rz(pi/2) node[0];
ry(pi) node[0];
rz(-1.736710062545761) coin[0];
ry(1.5794556004953724) coin[0];
rz(1.6748462861356774) coin[0];
cx node[0],coin[0];
rz(3.3379421944391545) node[0];
rz(pi/2) coin[0];
ry(2.1321831677083103) coin[0];
cx coin[0],node[1];
rz(-pi/16) node[1];
ry(2.5802058126763807) node[1];
rz(-pi/2) node[1];
cx node[0],node[1];
ry(pi) node[0];
rz(-1.736710062545761) node[1];
ry(1.5794556004953724) node[1];
rz(1.6748462861356774) node[1];
cx node[0],node[1];
rz(3.3379421944391554) node[0];
rz(pi/2) node[1];
ry(2.1321831677083094) node[1];
cx coin[0],node[1];
rz(9*pi/16) node[1];
ry(2.58020581267638) node[1];
rz(-pi/2) node[1];
cx node[0],node[1];
ry(pi) node[0];
rz(-1.736710062545761) node[1];
ry(1.5794556004953724) node[1];
rz(1.6748462861356774) node[1];
cx node[0],node[1];
rz(3.3379421944391545) node[0];
rz(pi/2) node[1];
ry(2.1321831677083103) node[1];
cx node[1],node[2];
rz(-pi/16) node[2];
ry(2.5802058126763807) node[2];
rz(-pi/2) node[2];
cx node[0],node[2];
ry(pi) node[0];
rz(-1.736710062545761) node[2];
ry(1.5794556004953724) node[2];
rz(1.6748462861356774) node[2];
cx node[0],node[2];
rz(3.3379421944391554) node[0];
rz(pi/2) node[2];
ry(2.1321831677083094) node[2];
cx coin[0],node[2];
rz(pi/16) node[2];
ry(2.58020581267638) node[2];
rz(-pi/2) node[2];
cx node[0],node[2];
ry(pi) node[0];
rz(-1.736710062545761) node[2];
ry(1.5794556004953724) node[2];
rz(1.6748462861356774) node[2];
cx node[0],node[2];
rz(3.3379421944391545) node[0];
rz(pi/2) node[2];
ry(2.1321831677083103) node[2];
cx node[1],node[2];
rz(pi/2) node[1];
ry(pi/2) node[1];
rx(4.680377331994426) coin[0];
rz(pi/8) node[1];
rz(-pi/16) node[2];
ry(2.5802058126763807) node[2];
rz(-pi/2) node[2];
cx node[0],node[2];
ry(pi) node[0];
rz(-1.736710062545761) node[2];
ry(1.5794556004953724) node[2];
rz(1.6748462861356774) node[2];
cx node[0],node[2];
rz(3.3379421944391554) node[0];
rz(pi/2) node[2];
ry(2.1321831677083094) node[2];
cx coin[0],node[2];
rz(3*pi/16) node[2];
ry(2.58020581267638) node[2];
rz(-pi/2) node[2];
cx node[0],node[2];
ry(pi) node[0];
rz(-1.736710062545761) node[2];
ry(1.5794556004953724) node[2];
rz(1.6748462861356774) node[2];
cx node[0],node[2];
rz(9*pi/16) node[0];
ry(pi) node[0];
rz(pi/2) node[2];
ry(2.1321831677083103) node[2];
cx coin[0],node[2];
rz(-pi/8) node[2];
cx coin[0],node[2];
cx node[2],node[3];
rz(-pi/8) node[3];
cx coin[0],node[3];
rz(pi/8) node[3];
cx node[2],node[3];
rz(-pi/8) node[3];
cx coin[0],node[3];
cx node[3],node[1];
rz(-pi/8) node[1];
cx node[2],node[1];
rz(pi/8) node[1];
cx node[3],node[1];
rz(-pi/8) node[1];
cx coin[0],node[1];
rz(pi/8) node[1];
cx node[3],node[1];
rz(-pi/8) node[1];
cx node[2],node[1];
rz(pi/8) node[1];
ry(-pi/2) node[2];
rz(-pi) node[2];
cx node[3],node[1];
rz(-pi/8) node[1];
cx node[3],node[2];
rz(-pi/4) node[2];
cx coin[0],node[1];
ry(pi/2) node[1];
cx coin[0],node[2];
rz(pi/4) node[2];
cx node[3],node[2];
rz(-pi/4) node[2];
rz(pi/4) node[3];
cx coin[0],node[2];
rz(pi/4) node[2];
ry(pi/2) node[2];
cx coin[0],node[3];
ry(-0.5613868409134125) node[3];
rz(-pi/2) node[3];
cx node[0],node[3];
rz(pi/2) node[0];
ry(pi) node[0];
rz(-2.2191334273849) node[3];
ry(1.703175754437592) node[3];
rz(1.9603315569313438) node[3];
cx node[0],node[3];
rz(3*pi/4) node[0];
ry(pi) node[0];
ry(-pi/2) node[3];
rz(-0.224011322484035) node[3];
cx node[2],node[3];
rz(3*pi/4) node[3];
ry(pi/2) node[3];
ry(-pi/2) coin[0];
rz(7*pi/16) coin[0];
cx coin[0],node[3];
rz(pi/4) node[3];
cx node[1],node[3];
rz(-pi/4) node[3];
cx coin[0],node[3];
rz(pi/4) node[3];
cx node[1],node[3];
rz(3*pi/4) node[3];
ry(pi/2) node[3];
rz(pi/4) node[3];
cx node[2],node[3];
rz(2.77462181530763) node[3];
ry(1.956742475130694) node[3];
rz(2.43912376442508) node[3];
cx node[0],node[3];
rz(pi/2) node[0];
ry(pi) node[0];
rz(-2.2191334273849) node[3];
ry(1.703175754437592) node[3];
rz(1.9603315569313438) node[3];
cx node[0],node[3];
rz(pi/4) node[0];
ry(pi) node[0];
ry(pi/2) node[3];
rz(1.7948076492789315) node[3];
cx node[2],node[3];
rz(3*pi/4) node[3];
ry(pi/2) node[3];
rz(pi/4) node[3];
cx node[1],node[3];
rz(-pi/4) node[3];
cx coin[0],node[3];
rz(pi/4) node[3];
cx node[1],node[3];
rz(-pi/4) node[3];
cx coin[0],node[3];
ry(-pi/2) node[3];
rz(-3*pi/4) node[3];
cx node[2],node[3];
rz(3*pi/4) node[3];
ry(pi/2) node[3];
rz(pi/8) node[3];
ry(2.58020581267638) coin[0];
rz(-pi/2) coin[0];
cx node[0],coin[0];
rz(pi/2) node[0];
ry(pi) node[0];
rz(-1.736710062545761) coin[0];
ry(1.5794556004953724) coin[0];
rz(1.6748462861356774) coin[0];
cx node[0],coin[0];
rz(3.3379421944391545) node[0];
rz(pi/2) coin[0];
ry(2.1321831677083103) coin[0];
cx coin[0],node[1];
rz(-pi/16) node[1];
ry(2.5802058126763807) node[1];
rz(-pi/2) node[1];
cx node[0],node[1];
ry(pi) node[0];
rz(-1.736710062545761) node[1];
ry(1.5794556004953724) node[1];
rz(1.6748462861356774) node[1];
cx node[0],node[1];
rz(3.3379421944391554) node[0];
rz(pi/2) node[1];
ry(2.1321831677083094) node[1];
cx coin[0],node[1];
rz(9*pi/16) node[1];
ry(2.58020581267638) node[1];
rz(-pi/2) node[1];
cx node[0],node[1];
ry(pi) node[0];
rz(-1.736710062545761) node[1];
ry(1.5794556004953724) node[1];
rz(1.6748462861356774) node[1];
cx node[0],node[1];
rz(3.3379421944391545) node[0];
rz(pi/2) node[1];
ry(2.1321831677083103) node[1];
cx node[1],node[2];
rz(-pi/16) node[2];
ry(2.5802058126763807) node[2];
rz(-pi/2) node[2];
cx node[0],node[2];
ry(pi) node[0];
rz(-1.736710062545761) node[2];
ry(1.5794556004953724) node[2];
rz(1.6748462861356774) node[2];
cx node[0],node[2];
rz(3.3379421944391554) node[0];
rz(pi/2) node[2];
ry(2.1321831677083094) node[2];
cx coin[0],node[2];
rz(pi/16) node[2];
ry(2.58020581267638) node[2];
rz(-pi/2) node[2];
cx node[0],node[2];
ry(pi) node[0];
rz(-1.736710062545761) node[2];
ry(1.5794556004953724) node[2];
rz(1.6748462861356774) node[2];
cx node[0],node[2];
rz(3.3379421944391545) node[0];
rz(pi/2) node[2];
ry(2.1321831677083103) node[2];
cx node[1],node[2];
rz(pi/2) node[1];
ry(pi/2) node[1];
rz(pi/8) node[1];
rz(-pi/16) node[2];
ry(2.5802058126763807) node[2];
rz(-pi/2) node[2];
cx node[0],node[2];
ry(pi) node[0];
rz(-1.736710062545761) node[2];
ry(1.5794556004953724) node[2];
rz(1.6748462861356774) node[2];
cx node[0],node[2];
rz(3.3379421944391554) node[0];
rz(pi/2) node[2];
ry(2.1321831677083094) node[2];
cx coin[0],node[2];
rz(3*pi/16) node[2];
ry(2.58020581267638) node[2];
rz(-pi/2) node[2];
cx node[0],node[2];
ry(pi) node[0];
rz(-1.736710062545761) node[2];
ry(1.5794556004953724) node[2];
rz(1.6748462861356774) node[2];
cx node[0],node[2];
rz(9*pi/16) node[0];
ry(pi) node[0];
rz(pi/2) node[2];
ry(2.1321831677083103) node[2];
cx coin[0],node[2];
rz(-pi/8) node[2];
cx coin[0],node[2];
cx node[2],node[3];
rx(4.778815717253732) node[0];
rz(-pi/8) node[3];
cx coin[0],node[3];
rz(pi/8) node[3];
cx node[2],node[3];
rz(-pi/8) node[3];
cx coin[0],node[3];
cx node[3],node[1];
rz(-pi/8) node[1];
cx node[2],node[1];
rz(pi/8) node[1];
cx node[3],node[1];
rz(-pi/8) node[1];
cx coin[0],node[1];
rz(pi/8) node[1];
cx node[3],node[1];
rz(-pi/8) node[1];
cx node[2],node[1];
rz(pi/8) node[1];
ry(-pi/2) node[2];
rz(-pi) node[2];
cx node[3],node[1];
rz(-pi/8) node[1];
cx node[3],node[2];
rz(-pi/4) node[2];
cx coin[0],node[1];
ry(pi/2) node[1];
cx coin[0],node[2];
rz(pi/4) node[2];
cx node[3],node[2];
rz(-pi/4) node[2];
rz(pi/4) node[3];
cx coin[0],node[2];
rz(pi/4) node[2];
ry(pi/2) node[2];
cx coin[0],node[3];
ry(-0.5613868409134125) node[3];
rz(-pi/2) node[3];
cx node[0],node[3];
rz(pi/2) node[0];
ry(pi) node[0];
rz(-2.2191334273849) node[3];
ry(1.703175754437592) node[3];
rz(1.9603315569313438) node[3];
cx node[0],node[3];
rz(3*pi/4) node[0];
ry(pi) node[0];
ry(-pi/2) node[3];
rz(-0.224011322484035) node[3];
cx node[2],node[3];
rz(3*pi/4) node[3];
ry(pi/2) node[3];
rx(2.0330391279576614) node[2];
ry(pi) coin[0];
rz(4.516039439535327) coin[0];
cx coin[0],node[3];
rz(pi/4) node[3];
cx node[1],node[3];
rz(-pi/4) node[3];
cx coin[0],node[3];
rz(pi/4) node[3];
cx node[1],node[3];
rz(3*pi/4) node[3];
ry(pi/2) node[3];
rz(pi/4) node[3];
cx node[2],node[3];
rz(2.77462181530763) node[3];
ry(1.956742475130694) node[3];
rz(2.43912376442508) node[3];
cx node[0],node[3];
rz(pi/2) node[0];
ry(pi) node[0];
rz(-2.2191334273849) node[3];
ry(1.703175754437592) node[3];
rz(1.9603315569313438) node[3];
cx node[0],node[3];
rz(pi/4) node[0];
ry(pi) node[0];
ry(pi/2) node[3];
rz(1.7948076492789315) node[3];
cx node[2],node[3];
rz(3*pi/4) node[3];
ry(pi/2) node[3];
rz(pi/4) node[3];
cx node[1],node[3];
rz(-pi/4) node[3];
cx coin[0],node[3];
rz(pi/4) node[3];
cx node[1],node[3];
rz(-pi/4) node[3];
cx coin[0],node[3];
ry(-pi/2) node[3];
rz(-3*pi/4) node[3];
cx node[2],node[3];
rz(3*pi/4) node[3];
ry(pi/2) node[3];
rz(pi/8) node[3];
ry(2.58020581267638) coin[0];
rz(-pi/2) coin[0];
cx node[0],coin[0];
rz(pi/2) node[0];
ry(pi) node[0];
rz(-1.736710062545761) coin[0];
ry(1.5794556004953724) coin[0];
rz(1.6748462861356774) coin[0];
cx node[0],coin[0];
rz(3.3379421944391545) node[0];
rz(pi/2) coin[0];
ry(2.1321831677083103) coin[0];
cx coin[0],node[1];
rz(-pi/16) node[1];
ry(2.5802058126763807) node[1];
rz(-pi/2) node[1];
cx node[0],node[1];
ry(pi) node[0];
rz(-1.736710062545761) node[1];
ry(1.5794556004953724) node[1];
rz(1.6748462861356774) node[1];
cx node[0],node[1];
rz(3.3379421944391554) node[0];
rz(pi/2) node[1];
ry(2.1321831677083094) node[1];
cx coin[0],node[1];
rz(9*pi/16) node[1];
ry(2.58020581267638) node[1];
rz(-pi/2) node[1];
cx node[0],node[1];
ry(pi) node[0];
rz(-1.736710062545761) node[1];
ry(1.5794556004953724) node[1];
rz(1.6748462861356774) node[1];
cx node[0],node[1];
rz(3.3379421944391545) node[0];
rz(pi/2) node[1];
ry(2.1321831677083103) node[1];
cx node[1],node[2];
rz(-pi/16) node[2];
ry(2.5802058126763807) node[2];
rz(-pi/2) node[2];
cx node[0],node[2];
ry(pi) node[0];
rz(-1.736710062545761) node[2];
ry(1.5794556004953724) node[2];
rz(1.6748462861356774) node[2];
cx node[0],node[2];
rz(3.3379421944391554) node[0];
rz(pi/2) node[2];
ry(2.1321831677083094) node[2];
cx coin[0],node[2];
rz(pi/16) node[2];
ry(2.58020581267638) node[2];
rz(-pi/2) node[2];
cx node[0],node[2];
ry(pi) node[0];
rz(-1.736710062545761) node[2];
ry(1.5794556004953724) node[2];
rz(1.6748462861356774) node[2];
cx node[0],node[2];
rz(3.3379421944391545) node[0];
rz(pi/2) node[2];
ry(2.1321831677083103) node[2];
cx node[1],node[2];
rz(pi/2) node[1];
ry(pi/2) node[1];
rz(pi/8) node[1];
rz(-pi/16) node[2];
ry(2.5802058126763807) node[2];
rz(-pi/2) node[2];
cx node[0],node[2];
ry(pi) node[0];
rz(-1.736710062545761) node[2];
ry(1.5794556004953724) node[2];
rz(1.6748462861356774) node[2];
cx node[0],node[2];
rz(-15*pi/16) node[0];
ry(pi) node[0];
rz(pi/2) node[2];
ry(2.1321831677083094) node[2];
cx coin[0],node[2];
rz(3*pi/16) node[2];
cx node[2],node[0];
ry(0.9489680884897065) coin[0];
rz(-pi/16) node[0];
cx node[2],node[0];
rz(-15*pi/16) node[0];
ry(pi/2) node[0];
cx coin[0],node[2];
rz(-pi/8) node[2];
cx coin[0],node[2];
cx node[2],node[3];
rz(-pi/8) node[3];
cx coin[0],node[3];
rz(pi/8) node[3];
cx node[2],node[3];
rz(-pi/8) node[3];
cx coin[0],node[3];
cx node[3],node[1];
rz(-pi/8) node[1];
cx node[2],node[1];
rz(pi/8) node[1];
cx node[3],node[1];
rz(-pi/8) node[1];
cx coin[0],node[1];
rz(pi/8) node[1];
cx node[3],node[1];
rz(-pi/8) node[1];
cx node[2],node[1];
rz(pi/8) node[1];
ry(1.4647091093530997) node[0];
ry(-pi/2) node[2];
rz(-pi) node[2];
cx node[3],node[1];
rz(-pi/8) node[1];
cx node[3],node[2];
rz(-pi/4) node[2];
cx coin[0],node[1];
ry(pi/2) node[1];
cx coin[0],node[2];
rz(pi/4) node[2];
cx node[3],node[2];
rz(-pi/4) node[2];
rx(5.88458161177764) node[1];
rz(pi/4) node[3];
cx coin[0],node[2];
rz(pi/4) node[2];
ry(pi/2) node[2];
cx coin[0],node[3];
rz(3*pi/4) node[3];
ry(pi) node[3];
ry(pi) coin[0];
rz(pi) coin[0];
