OPENQASM 2.0;
include "qelib1.inc";
qreg node[2];
qreg coin[1];
ry(-pi/2) node[0];
rz(-pi) node[0];
cx node[1],node[0];
rz(-pi/4) node[0];
ry(-pi/2) coin[0];
rz(-2.9175813311057572) coin[0];
cx coin[0],node[0];
rz(pi/4) node[0];
cx node[1],node[0];
rz(-pi/4) node[0];
ry(-pi/2) node[0];
rz(pi/4) node[1];
ry(pi/2) coin[0];
cx node[0],coin[0];
ry(pi/2) node[0];
rz(pi/4) node[0];
ry(-pi/2) coin[0];
rz(0.561386840913412) coin[0];
cx coin[0],node[1];
rz(3*pi/4) node[1];
ry(pi) node[1];
cx node[1],node[0];
rz(-pi/4) node[0];
ry(pi) coin[0];
rz(2.5802058126763807) coin[0];
cx coin[0],node[0];
rz(pi/4) node[0];
cx node[1],node[0];
rz(-pi/4) node[0];
ry(-pi/2) node[0];
rz(pi/4) node[1];
ry(pi/2) coin[0];
cx node[0],coin[0];
ry(pi/2) node[0];
rz(pi/4) node[0];
ry(-pi/2) coin[0];
rz(-1.7948076492789329) coin[0];
cx coin[0],node[1];
rz(3*pi/4) node[1];
ry(pi) node[1];
cx node[1],node[0];
rz(-pi/4) node[0];
ry(pi/2) coin[0];
rz(-2.917581331105758) coin[0];
cx coin[0],node[0];
rz(pi/4) node[0];
cx node[1],node[0];
rz(-pi/4) node[0];
ry(-pi/2) node[0];
rz(pi/4) node[1];
ry(pi/2) coin[0];
cx node[0],coin[0];
ry(pi/2) node[0];
rz(pi/4) node[0];
ry(-pi/2) coin[0];
rz(0.561386840913412) coin[0];
cx coin[0],node[1];
rz(3*pi/4) node[1];
ry(pi) node[1];
cx node[1],node[0];
rz(-pi/4) node[0];
ry(pi) coin[0];
rz(2.5802058126763807) coin[0];
cx coin[0],node[0];
rz(pi/4) node[0];
cx node[1],node[0];
rz(-pi/4) node[0];
ry(-pi/2) node[0];
rz(pi/4) node[1];
ry(pi/2) coin[0];
cx node[0],coin[0];
ry(pi/2) node[0];
rz(pi/4) node[0];
ry(-pi/2) coin[0];
rz(-1.7948076492789329) coin[0];
cx coin[0],node[1];
rz(3*pi/4) node[1];
ry(pi) node[1];
cx node[1],node[0];
rz(-pi/4) node[0];
ry(pi/2) coin[0];
rz(-2.917581331105758) coin[0];
cx coin[0],node[0];
rz(pi/4) node[0];
cx node[1],node[0];
rz(-pi/4) node[0];
ry(-pi/2) node[0];
rz(pi/4) node[1];
ry(pi/2) coin[0];
cx node[0],coin[0];
ry(pi/2) node[0];
rz(pi/4) node[0];
ry(-pi/2) coin[0];
rz(0.561386840913412) coin[0];
cx coin[0],node[1];
rz(3*pi/4) node[1];
ry(pi) node[1];
cx node[1],node[0];
rz(-pi/4) node[0];
ry(pi) coin[0];
rz(pi/4) coin[0];
cx coin[0],node[0];
rz(pi/4) node[0];
cx node[1],node[0];
rz(-pi/4) node[0];
rz(pi/4) node[1];
cx coin[0],node[0];
rz(-3*pi/4) node[0];
ry(pi/2) node[0];
cx coin[0],node[1];
rz(3*pi/4) node[1];
ry(pi) node[1];
ry(pi) coin[0];
