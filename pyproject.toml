[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "QuPRS"
authors = [
    { name = "Wei-Jia Huang", email = "wei.jia.huang.physics@gmail.com" },
]
description = "QuPRS: Quantum Path-sum Reduction and Solver" 
keywords = ["pathsum", "weighted model counting", "quantum circuit", "equivalence checking", ]
readme = "README.md"
license-files  = ["LICENSE.md", "NOTICE.md"]
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha", # (Alpha, Beta, Production/Stable)
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent", 
]
dependencies = [
    "numpy",
    "sympy",
    "symengine",
    "qiskit<2.0,>=1.0.0",
    "qiskit-qasm3-import>=0.5.1",
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "ipykernel",
    "build",
    "pytest",
    "pytest-xdist",
    "pytest-cov",
    "pytest-flake8",
    "pytest-benchmark",
    "pytest-html",
    "pandas",
    "tqdm",
    "hatch",
    "hatch-vcs",
]

[project.urls]
Homepage = "https://github.com/PhysicsQoo/QuPRS" # GitHub link
PyPI = "https://pypi.org/project/QuPRS/"

[tool.hatch.version]
source = "vcs"
fallback-version = "0.0.1"

[tool.hatch.build.hooks.vcs]
version-file = "src/QuPRS/_version.py"

[tool.hatch.build.hooks.custom]
# Points to our custom build script
path = "scripts/hatch_build.py"

[tool.hatch.build.targets.sdist]
include = [
    "src",
    "GPMC",
    "scripts/hatch_build.py",
    "pyproject.toml",
    "README.md",
]

[tool.hatch.build.targets.wheel]
packages = ["src/QuPRS"]
pure-python-wheel = false
shared-data = [
    { path = "src/QuPRS/utils/*", tag = "platlib" }
]
[tool.cibuildwheel]
test-requires = "pytest"
test-command = "pytest {project}/tests"
build-verbosity = 1

[tool.cibuildwheel.linux]
manylinux-x86_64-image = "manylinux_2_28"
manylinux-i686-image = "manylinux_2_28"
before-all = "yum install -y gmp-devel mpfr-devel zlib-devel cmake"

[tool.cibuildwheel.macos]
before-all = "brew install gmp mpfr zlib cmake"

[tool.cibuildwheel.windows]
environment = "PATH=C:\\msys64\\usr\\bin;$PATH"
before-all = "pacman -S --noconfirm mingw-w64-x86_64-gmp mingw-w64-x86_64-mpfr mingw-w64-x86_64-zlib mingw-w64-x86_64-cmake"
